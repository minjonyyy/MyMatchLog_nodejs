# src/swagger/users.swagger.yaml

# --------------------------------
# 태그 정의: API들을 그룹화합니다.
# --------------------------------
tags:
  - name: Users
    description: 사용자 인증 및 관리를 위한 API

# --------------------------------
# API 경로 및 명세 정의
# --------------------------------
paths:
  /api/users/signup:
    post:
      summary: 새로운 사용자 등록
      tags: [Users]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSignUpRequest' # 아래 정의된 스키마 참조
      responses:
        '201':
          description: 회원가입 성공
        '400':
          description: 잘못된 입력값
        '409':
          description: 이미 존재하는 이메일 또는 닉네임

  /api/users/login:
    post:
      summary: 사용자 로그인
      tags: [Users]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLoginRequest' # 아래 정의된 스키마 참조
      responses:
        '200':
          description: 로그인 성공. Access/Refresh 토큰 반환
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse' # 아래 정의된 스키마 참조
        '401':
          description: 인증 실패 (비밀번호 불일치)
        '404':
          description: 존재하지 않는 사용자

  /api/users/token:
    post:
      summary: Access Token 갱신
      tags: [Users]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - refreshToken
              properties:
                refreshToken:
                  type: string
                  description: "로그인 시 발급받은 Refresh Token"
      responses:
        '200':
          description: Access Token 갱신 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
        '401':
          description: 유효하지 않거나 만료된 Refresh Token

# --------------------------------
# 재사용 가능한 데이터 모델 (스키마) 정의
# --------------------------------
components:
  schemas:
    UserSignUpRequest:
      type: object
      required:
        - email
        - password
        - nickname
      properties:
        email:
          type: string
          format: email
          example: "test@example.com"
        password:
          type: string
          description: "최소 8자, 대/소문자, 숫자, 특수문자(@$!%*?&) 포함"
          example: "Password123!"
        nickname:
          type: string
          example: "테스트유저"

    UserLoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          example: "test@example.com"
        password:
          type: string
          example: "Password123!"

    LoginResponse:
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string

    # Match Logs Schemas
    MatchLogListItem:
      type: object
      properties:
        id:
          type: integer
          description: 직관 기록 ID
          example: 1
        match_date:
          type: string
          format: date
          description: 경기 날짜
          example: "2024-07-20"
        home_team:
          type: string
          description: 홈팀
          example: "LG 트윈스"
        away_team:
          type: string
          description: 원정팀
          example: "두산 베어스"
        stadium:
          type: string
          description: 경기장
          example: "잠실야구장"
        result:
          type: string
          nullable: true
          enum: [WIN, LOSS, DRAW]
          description: 경기 결과
          example: "WIN"
        memo:
          type: string
          nullable: true
          description: 개인 메모
          example: "정말 재미있는 경기였습니다!"
        ticket_image_url:
          type: string
          nullable: true
          description: 티켓 이미지 URL
          example: null
        created_at:
          type: string
          format: date-time
          description: 생성 일시
        updated_at:
          type: string
          format: date-time
          description: 수정 일시

    MatchLogDetail:
      type: object
      properties:
        id:
          type: integer
          description: 직관 기록 ID
          example: 1
        user_id:
          type: integer
          description: 사용자 ID
          example: 7
        match_date:
          type: string
          format: date
          description: 경기 날짜
          example: "2024-07-20"
        home_team:
          type: string
          description: 홈팀
          example: "LG 트윈스"
        away_team:
          type: string
          description: 원정팀
          example: "두산 베어스"
        stadium:
          type: string
          description: 경기장
          example: "잠실야구장"
        result:
          type: string
          nullable: true
          enum: [WIN, LOSS, DRAW]
          description: 경기 결과
          example: "WIN"
        memo:
          type: string
          nullable: true
          description: 개인 메모
          example: "정말 재미있는 경기였습니다!"
        ticket_image_url:
          type: string
          nullable: true
          description: 티켓 이미지 URL
          example: null
        created_at:
          type: string
          format: date-time
          description: 생성 일시
        updated_at:
          type: string
          format: date-time
          description: 수정 일시

    CreateMatchLogRequest:
      type: object
      required:
        - match_date
        - home_team_id
        - away_team_id
        - stadium
      properties:
        match_date:
          type: string
          format: date
          description: 경기 날짜
          example: "2024-07-20"
        home_team_id:
          type: integer
          description: 홈팀 ID (teams 테이블 참조)
          example: 1
        away_team_id:
          type: integer
          description: 원정팀 ID (teams 테이블 참조, home_team_id와 달라야 함)
          example: 2
        stadium:
          type: string
          description: 경기장
          example: "잠실야구장"
        result:
          type: string
          nullable: true
          enum: [WIN, LOSS, DRAW]
          description: 경기 결과 (선택사항)
          example: "WIN"
        memo:
          type: string
          nullable: true
          description: 개인 메모 (선택사항)
          example: "정말 재미있는 경기였습니다!"
        ticket_image:
          type: string
          format: binary
          nullable: true
          description: 티켓 이미지 파일 (jpg, png, jpeg 지원)
          example: null

    UpdateMatchLogRequest:
      type: object
      properties:
        match_date:
          type: string
          format: date
          description: 경기 날짜
          example: "2024-07-20"
        home_team_id:
          type: integer
          description: 홈팀 ID (teams 테이블 참조)
          example: 1
        away_team_id:
          type: integer
          description: 원정팀 ID (teams 테이블 참조, home_team_id와 달라야 함)
          example: 2
        stadium:
          type: string
          description: 경기장
          example: "잠실야구장"
        result:
          type: string
          nullable: true
          enum: [WIN, LOSS, DRAW]
          description: 경기 결과
          example: "WIN"
        memo:
          type: string
          nullable: true
          description: 개인 메모
          example: "수정된 메모입니다."
        ticket_image_url:
          type: string
          nullable: true
          description: 티켓 이미지 URL
          example: null

    Pagination:
      type: object
      properties:
        currentPage:
          type: integer
          description: 현재 페이지
          example: 1
        totalPages:
          type: integer
          description: 전체 페이지 수
          example: 5
        totalCount:
          type: integer
          description: 전체 항목 수
          example: 42
        hasNextPage:
          type: boolean
          description: 다음 페이지 존재 여부
          example: true
        hasPrevPage:
          type: boolean
          description: 이전 페이지 존재 여부
          example: false
        limit:
          type: integer
          description: 페이지 당 항목 수
          example: 10

    # Team Schema  
    Team:
      type: object
      properties:
        id:
          type: integer
          description: 팀 고유 ID
          example: 1
        name:
          type: string
          description: 팀 이름
          example: "LG 트윈스"
        logo_url:
          type: string
          nullable: true
          description: 팀 로고 이미지 URL
          example: "https://example.com/lg-logo.png"
        home_stadium:
          type: string
          description: 홈구장 이름
          example: "서울종합운동장 야구장"

    # Stadium Schema
    Stadium:
      type: object
      properties:
        id:
          type: integer
          description: 경기장 고유 ID
          example: 1
        name:
          type: string
          description: 경기장 이름
          example: "잠실야구장"
        city:
          type: string
          description: 도시
          example: "서울"
        capacity:
          type: integer
          description: 수용 인원
          example: 25000
        created_at:
          type: string
          format: date-time
          description: 생성 일시
          example: "2024-01-01T00:00:00.000Z"
        updated_at:
          type: string
          format: date-time
          description: 수정 일시
          example: "2024-01-01T00:00:00.000Z" 