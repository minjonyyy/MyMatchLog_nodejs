import mysql from 'mysql2/promise';
import dotenv from 'dotenv';

dotenv.config();

// ÏãúÎî©Ïö© Ïã§Ï†ú Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§ Ïó∞Í≤∞ ÏÉùÏÑ±
const createSeedingPool = () => {
  return mysql.createPool({
    host: process.env.DB_HOST || 'localhost',
    user: process.env.DB_USER || 'root',
    password: process.env.DB_PASSWORD,
    database: process.env.DB_NAME || 'mymatchlog_dev',
    port: process.env.DB_PORT || 3306,
    waitForConnections: true,
    connectionLimit: 10,
    queueLimit: 0,
    timezone: '+09:00', // ÌïúÍµ≠ ÏãúÍ∞ÑÎåÄ ÏÑ§Ï†ï
  });
};

const teamsData = [
  { name: 'LG Ìä∏ÏúàÏä§', home_stadium: 'ÏÑúÏö∏Ï¢ÖÌï©Ïö¥ÎèôÏû• ÏïºÍµ¨Ïû•' },
  { name: 'ÎëêÏÇ∞ Î≤†Ïñ¥Ïä§', home_stadium: 'ÏÑúÏö∏Ï¢ÖÌï©Ïö¥ÎèôÏû• ÏïºÍµ¨Ïû•' },
  { name: 'SSG ÎûúÎçîÏä§', home_stadium: 'Ïù∏Ï≤úSSGÎûúÎçîÏä§ÌïÑÎìú' },
  { name: 'ÌÇ§ÏõÄ ÌûàÏñ¥Î°úÏ¶à', home_stadium: 'Í≥†Ï≤ôÏä§Ïπ¥Ïù¥Îèî' },
  { name: 'NC Îã§Ïù¥ÎÖ∏Ïä§', home_stadium: 'Ï∞ΩÏõêNCÌååÌÅ¨' },
  { name: 'KIA ÌÉÄÏù¥Í±∞Ï¶à', home_stadium: 'Í¥ëÏ£ºÍ∏∞ÏïÑÏ±îÌîºÏñ∏Ïä§ÌïÑÎìú' },
  { name: 'Î°ØÎç∞ ÏûêÏù¥Ïñ∏Ï∏†', home_stadium: 'ÏÇ¨ÏßÅÏïºÍµ¨Ïû•' },
  { name: 'ÏÇºÏÑ± ÎùºÏù¥Ïò®Ï¶à', home_stadium: 'ÎåÄÍµ¨ÏÇºÏÑ±ÎùºÏù¥Ïò®Ï¶àÌååÌÅ¨' },
  { name: 'ÌïúÌôî Ïù¥Í∏ÄÏä§', home_stadium: 'ÎåÄÏ†ÑÌïúÌôîÏÉùÎ™ÖÏù¥Í∏ÄÏä§ÌååÌÅ¨' },
  { name: 'kt wiz', home_stadium: 'ÏàòÏõêKTÏúÑÏ¶àÌååÌÅ¨' },
];

const seedTeams = async () => {
  let connection;
  let pool;
  try {
    pool = createSeedingPool();
    connection = await pool.getConnection();
    console.log('üöÄ Starting to seed teams data...');

    // To prevent duplicate entries, clear the table first
    await connection.query('DELETE FROM teams');
    // Reset auto-increment counter
    await connection.query('ALTER TABLE teams AUTO_INCREMENT = 1');

    for (const team of teamsData) {
      const query = 'INSERT INTO teams (name, home_stadium) VALUES (?, ?)';
      await connection.query(query, [team.name, team.home_stadium]);
      console.log(`‚úÖ Seeded: ${team.name}`);
    }

    console.log('üéâ Teams data seeding completed successfully.');
  } catch (err) {
    console.error('‚ùå Error during teams data seeding:', err);
    process.exit(1);
  } finally {
    if (connection) {
      connection.release();
    }
    if (pool) {
      await pool.end();
    }
  }
};

seedTeams(); 